#ifndef __LKM_VMX_H__
#define __LKM_VMX_H__

const char* vmx_get_error_message (void);

typedef enum
{
   nmi = 0,
   external_interrupt,
   triple_fault,
   init_signal,
   sipi,
   io_smi,
   other_smi,
   interrupt_window,
   nmi_window,
   task_switch,
   cpuid,
   getsec,
   hlt,
   invd,
   invlpg,
   rdpmc,
   rdtsc,
   rsm,
   vmcall,
   vmclear,
   vmlaunch,
   vmptrld,
   vmptrst,
   vmread,
   vmresume,
   vmwrite,
   vmxoff,
   vmxon,
   cr_access,
   mov_dr,
   io_instruction,
   rdmsr,
   wrmsr_wrmsrns,
   invalid_guest_state,
   msr_loading_error,
   mwait,
   monitor_trap_flag,
   monitor,
   pause,
   machine_check_event,
   tpr_below_threshold,
   apic_access,
   virtualized_eoi,
   gdtr_idtr_access,
   ldtr_tr_access,
   ept_violation,
   ept_misconfiguration,
   invept,
   rdtscp,
   vmx_preemption_timer,
   invvpid,
   wbinvd_wbnoinvd,
   xsetbv,
   apic_write,
   rdrand,
   invpcid,
   vmfunc,
   encls,
   rdseed,
   pml_full,
   xsaves,
   xrstors,
   pconfig,
   spp_related_event,
   umwait,
   tpause,
   loadiwkey,
   enclv,
   enqcmd_pasid_error,
   enqcmds_pasid_error,
   bus_lock,
   instruction_timeout,
   seamcall,
   tdcall,
   rdmsrlist,
   wrmsrlist
} __vm_exit_reason;

#endif // __LKM_VMX_H__
